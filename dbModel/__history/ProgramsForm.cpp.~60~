//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "ProgramsForm.h"
//---------------------------------------------------------------------------
//#pragma package(smart_init)
#pragma resource "*.dfm"
//---------------------------------------------------------------------------
__fastcall TProgramsForm::TProgramsForm(TComponent* Owner)
	: TComplexEntitiesForm(Owner)
{
	this->modalForm=reinterpret_cast<TModalEntityForm **>(&App::ModalForms::programModal);
	this->OnShow=onShow;
	this->Button5->OnClick=this->onOkButton;
	this->images=this->ImageList1;
	panel=new ProgramRows(this);
	panel->Align=alTop;
	panel->Parent=this->ScrollBox1;
	panel->Height=0;
	panel->BevelOuter=bvNone;
	panel->Padding->Left=2;
	panel->Padding->Right=2;
	panel->Padding->Top=2;
	panel->Padding->Bottom=2;
	std::vector<SDODBImage::EntityTypeEvent> events;
	SDODBImage::EntityTypeEvent ete;ete.entType=SDODBImage::EntityType::EProgram;ete.eventType=SDODBImage::EventType::Delete;
	events.push_back(ete);
	ete.entType=SDODBImage::EntityType::EProgram;ete.eventType=SDODBImage::EventType::Create;
	events.push_back(ete);
	ete.entType=SDODBImage::EntityType::EProgram;ete.eventType=SDODBImage::EventType::Update;
	events.push_back(ete);
	App::db->attachHandler(this,events);
}
__fastcall TProgramsForm::~TProgramsForm(){
	App::db->detachHandler(this);
}
void TProgramsForm::Handle(std::vector<EntEvent> &entities){
	if(this->Visible==false)return;
	for(int i=0;i<entities.size();++i){
		if(entities[i].eventType==SDODBImage::EventType::Delete){
			for(int j=0;j<panel->rows.size();++j){
				if(panel->rows[j]->initEntity->getID()==entities[i].id){
					panel->rows[j]->hideInPanel();
					panel->deletedRows.push_back(panel->rows[j]);
					panel->rows.erase(panel->rows.begin()+j);
				}
			}
		}
		if(entities[i].eventType==SDODBImage::EventType::Create){
			panel->addRow(App::db->getPrograms()->getById(entities[i].id));
		}
	}
}
//---------------------------------------------------------------------------

ProgramRow::ProgramRow(ARowsPanel *parent, int size):AEntityRow(parent,size){
	tempEntity=new Program("","",0,true,true,1,0,16777215,0,0,0,0);
	name=new TEdit((HWND)0);
	name->Font->Size=12;
	name->Align=alClient;
	key=new TEdit((HWND)0);
	key->Font->Size=12;
	key->Align=alClient;
	isActive=new TCheckBox((HWND)0);
	isActive->Width=20;
	isProgram=new TCheckBox((HWND)0);
	isProgram->Width=20;

	controls[1]=isActive;
	controls[2]=name;
	controls[3]=key;
	controls[4]=isProgram;
}
void ProgramRow::writeToRow(KAEntity* entity){
	Program *pr=dynamic_cast<Program*>(entity);
	name->Text=pr->name;
	isActive->Checked=pr->isactual;
	isProgram->Checked=pr->istraining;
	key->Text=pr->key;
}
void ProgramRow::writeToEntity(KAEntity* entity){
	Program *pr=dynamic_cast<Program*>(entity);
	pr->name=name->Text;
	pr->isactual=isActive->Checked;
	pr->istraining=isProgram->Checked;
	pr->key=key->Text;
}
ProgramRow::~ProgramRow(){
	delete name;
	delete key;
	delete isActive;
	delete isProgram;
}

__fastcall ProgramRows::ProgramRows(TComponent *Owner):RRowsPanel<ProgramRow,6>(Owner){
	entTable=App::db->getPrograms();
	this->ColumnCollection->Clear();
	this->RowCollection->Clear();
	this->ColumnCollection->BeginUpdate();
	TColumnItem *ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssAbsolute;
	ci->Value=35;
	ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssAbsolute;
	ci->Value=50;
	ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssPercent;
	ci->Value=100;
	ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssAbsolute;
	ci->Value=50;
	ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssAbsolute;
	ci->Value=50;
	ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssAbsolute;
	ci->Value=35;
	this->ColumnCollection->EndUpdate();
}
__fastcall ProgramRows::~ProgramRows(){
}
//---------------------------------------------------------------------------

void __fastcall TProgramsForm::Button2Click(TObject *Sender)
{
	Program *pr=new Program("","",0,true,true,1,0,16777215,0,0,0,0);
	App::ModalForms::initForm(modalForm);
	int hy=modalForm[0]->ShowModal();
	if(hy==mrOk){
		*pr=*modalForm[0]->getEntity();
		panel->addRow(pr);
	}
}
//---------------------------------------------------------------------------

