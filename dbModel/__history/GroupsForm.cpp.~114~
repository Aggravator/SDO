//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "GroupsForm.h"
//---------------------------------------------------------------------------
//#pragma package(smart_init)
#pragma resource "*.dfm"

//---------------------------------------------------------------------------
__fastcall TGroupsForm::TGroupsForm(TComponent* Owner):TCustomEntitiesForm(Owner)
{
	this->modalForm=reinterpret_cast<TModalEntityForm **>(&App::ModalForms::groupModal);
	this->images=this->ImageList1;
	this->OnShow=this->onShow;
	panel=new GroupRows(this);
	panel->Align=alTop;
	panel->Parent=this->ScrollBox1;
	panel->Height=0;
	panel->BevelOuter=bvNone;
	panel->Padding->Left=2;
	panel->Padding->Right=2;
	panel->Padding->Top=2;
	panel->Padding->Bottom=2;
}
GroupRow::GroupRow(GroupRows *parent):EntityRow(parent){
	name=new TEdit((HWND)0);
	name->Font->Size=12;
	name->Align=alClient;
	isActive=new TCheckBox((HWND)0);
	isActive->Width=20;
	tempEntity=new Group("",true,0);
	controls[1]=isActive;
	controls[2]=name;
}
void GroupRow::writeToRow(KAEntity* entity){
	Group *gr=dynamic_cast<Group*>(entity);
	name->Text=gr->name;
	isActive->Checked=gr->isactual;
}
void GroupRow::writeToEntity(KAEntity* entity){
	Group *gr=dynamic_cast<Group*>(entity);
	gr->name=name->Text;
	gr->isactual=isActive->Checked;
}
GroupRow::~GroupRow(){
	delete name;
	delete isActive;
	delete tempEntity;
}

__fastcall GroupRows::GroupRows(TComponent *Owner):RowsPanel<GroupRow,4>(Owner){
	entTable=App::db->getGroups();
	this->ColumnCollection->Clear();
	this->RowCollection->Clear();
	this->ColumnCollection->BeginUpdate();
	TColumnItem *ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssAbsolute;
	ci->Value=35;
	ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssAbsolute;
	ci->Value=50;
	ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssPercent;
	ci->Value=100;
	ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssAbsolute;
	ci->Value=35;
	this->ColumnCollection->EndUpdate();
}
__fastcall GroupRows::~GroupRows(){
}


//---------------------------------------------------------------------------

void __fastcall TGroupsForm::Button1Click(TObject *Sender)
{
	Group *gr=new Group("",true,0);
	App::ModalForms::initForm(modalForm);
	int hy=modalForm[0]->ShowModal();
	if(hy==mrOk){
		*gr=*modalForm[0]->getEntity();
		panel->addRow(gr);
	}
}
//---------------------------------------------------------------------------


