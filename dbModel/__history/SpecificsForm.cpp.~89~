//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "SpecificsForm.h"
//---------------------------------------------------------------------------
//#pragma package(smart_init)
#pragma resource "*.dfm"
//---------------------------------------------------------------------------
__fastcall TSpecificsForm::TSpecificsForm(TComponent* Owner):TComplexEntitiesForm(Owner)
{
	this->modalForm=reinterpret_cast<TModalEntityForm **>(&App::ModalForms::specificModal);
	this->images=this->ImageList1;
	this->OnShow=this->onShow;
	this->Button5->OnClick=this->onOkButton;
	panel=new SpecificRows(this);
	panel->Align=alTop;
	panel->Parent=this->ScrollBox1;
	panel->Height=0;
	panel->BevelOuter=bvNone;
	panel->Padding->Left=2;
	panel->Padding->Right=2;
	panel->Padding->Top=2;
	panel->Padding->Bottom=2;
	std::vector<SDODBImage::EntityTypeEvent> events;
	SDODBImage::EntityTypeEvent ete;ete.entType=SDODBImage::EntityType::ESpecific;ete.eventType=SDODBImage::EventType::Delete;
	events.push_back(ete);
	ete.entType=SDODBImage::EntityType::ESpecific;ete.eventType=SDODBImage::EventType::Create;
	events.push_back(ete);
	ete.entType=SDODBImage::EntityType::ESpecific;ete.eventType=SDODBImage::EventType::Update;
	events.push_back(ete);
	App::db->attachHandler(this,events);
}
void TSpecificsForm::Handle(std::vector<EntEvent> &entities){
	for(int i=0;i<entities.size();++i){
		if(entities[i].eventType==SDODBImage::EventType::Delete){
			for(int j=0;j<panel->rows.size();++j){
				if(panel->rows[j]->initEntity->getID()==entities[i].id){
					panel->rows[j]->hideInPanel();
					panel->deletedRows.push_back(panel->rows[j]);
                    panel->rows.erase(panel->rows.begin()+j);
				}
			}
        }
	}
}
SpecificRow::SpecificRow(ARowsPanel *parent, int size):AEntityRow(parent,size){
	name=new TEdit((HWND)0);
	name->Font->Size=12;
	name->Align=alClient;
	tempEntity=new Specific("");
	controls[1]=name;
}
void SpecificRow::writeToRow(KAEntity* entity){
	Specific *sp=dynamic_cast<Specific*>(entity);
	name->Text=sp->name;
}
void SpecificRow::writeToEntity(KAEntity* entity){
	Specific *sp=dynamic_cast<Specific*>(entity);
	sp->name=name->Text;
}
SpecificRow::~SpecificRow(){
	delete name;
	delete tempEntity;
}

__fastcall SpecificRows::SpecificRows(TComponent *Owner):RRowsPanel<SpecificRow,3>(Owner){
	entTable=App::db->getSpecifics();
	this->ColumnCollection->Clear();
	this->RowCollection->Clear();
	this->ColumnCollection->BeginUpdate();
	TColumnItem *ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssAbsolute;
	ci->Value=35;
	ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssPercent;
	ci->Value=100;
	ci=this->ColumnCollection->Add();
	ci->SizeStyle=ssAbsolute;
	ci->Value=35;
	this->ColumnCollection->EndUpdate();
}
__fastcall SpecificRows::~SpecificRows(){
}


//---------------------------------------------------------------------------

void __fastcall TSpecificsForm::Button1Click(TObject *Sender)
{
	Specific *sp=new Specific("");
	App::ModalForms::initForm(modalForm);
	int hy=modalForm[0]->ShowModal();
	if(hy==mrOk){
		*sp=*modalForm[0]->getEntity();
		panel->addRow(sp);
	}
}
//---------------------------------------------------------------------------


