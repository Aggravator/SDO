//---------------------------------------------------------------------------

#pragma hdrstop

#include "CoreData.h"

Specific::Specific(int id,String* name,Specifics *parent){
	this->id=id;
	this->name=*name;
	this->parent=parent;
}

Specific::Specific(Specific &spec){
}

bool Specific::deleteSpecific(){
}

Specifics::Specifics(SDODBImage *parent){
	this->parent=parent;
}

bool Specifics::createSpecific(String* name){
	String equ= "Insert into specificity(specificity_name,specificity_creator) values (";
	parent->connection->Execute(equ+*name+","+IntToStr(parent->getUID())+")");
	TADOQuery *query=new TADOQuery(0);
	query->SQL->Add("SELECT specificity_id FROM sdo.specificity order by specificity_createtime desc  limit 1;");
	query->Active=true;
	TADOQuery &squery=*query;
	Specific *spec=new Specific(squery["specificity_id"],name,this);
	this->push_back(spec);
	squery.Close();
	delete query;
	return true;
}
Specifics::iterator Specifics::erase(iterator position){
	delete *position;
	(*this)::vector->erase(position);
	vector::erase(position);
	return position;
}
bool Specifics::deleteSpecifics(std::vector<Specific*> &specifics){
	String queryStr="delete from specificity where specificity_id in (";
	for(int i=0;i<specifics.size();++i){
		queryStr+=specifics[i]->id+",";
		std::vector<Specific*>::iterator pos=std::find(this->begin(),this->end(),specifics[i]);
		delete *pos;
		this->erase(pos);
	}
	queryStr=queryStr.SubString(0,queryStr.Length()-1)+");";
	parent->connection->Execute("queryStr");
    return true;
}
//---------------------------------------------------------------------------
#pragma package(smart_init)
